import React, { useState, useEffect } from "react";
import axios from "axios";
import "../styles/RangerCard.css";

const RangerCard = ({ ranger, onClick }) => {
    // Estado para almacenar el conteo de viajes (en caso de que no venga incluido)
    const [tripsCount, setTripsCount] = useState(ranger.trips || 0);
    const [loading, setLoading] = useState(false);
    
    // Asegurarse de que rating sea un número para mostrar correctamente
    const rating = typeof ranger.rating === 'number' ? ranger.rating.toFixed(1) : '0.0';
    
    // Obtener conteo de viajes si no viene incluido en los datos del ranger
    useEffect(() => {
        const fetchTripsCount = async () => {
            // Si ya tenemos el conteo, no hacemos la petición
            if (ranger.trips !== undefined) return;
            
            setLoading(true);
            try {
                const API_URL = 'https://rangerhub-back.vercel.app';
                const token = localStorage.getItem('token');
                
                const response = await axios.get(
                    `${API_URL}/api/rangers/${ranger.id}/trips-count`,
                    {
                        headers: token ? { Authorization: `Bearer ${token}` } : {}
                    }
                );
                
                if (response.data && response.data.trips_count !== undefined) {
                    setTripsCount(response.data.trips_count);
                }
            } catch (error) {
                console.error("Error al obtener conteo de viajes:", error);
            } finally {
                setLoading(false);
            }
        };
        
        fetchTripsCount();
    }, [ranger.id, ranger.trips]);
    
    // Determinar el número de viajes a mostrar
    const displayTrips = ranger.trips !== undefined ? ranger.trips : tripsCount;
    
    return (
        <div className="ranger-card">
            <div className="ranger-photo-container" onClick={() => onClick(ranger)}>
                <img
                    src={ranger.photo || "https://randomuser.me/api/portraits/men/1.jpg"}
                    alt={`${ranger.name}`}
                    className="ranger-photo"
                    onError={(e) => {
                        e.target.onerror = null;
                        e.target.src = "https://randomuser.me/api/portraits/men/1.jpg";
                    }}
                />
                <div className="view-details-overlay">
                    <span>Ver detalles</span>
                </div>
            </div>
            <div className="ranger-info">
                <h3 className="ranger-name">{ranger.name}</h3>
                <p className="ranger-title">{ranger.title}</p>
                <div className="ranger-stats">
                    <div className="stat">
                        <i className="bi bi-star-fill"></i>
                        <span>{rating}/5</span>
                    </div>
                    <div className="stat">
                        <i className="bi bi-compass"></i>
                        <span>
                            {loading ? "Cargando..." : `${displayTrips} viaje${displayTrips === 1 ? '' : 's'}`}
                        </span>
                    </div>
                </div>
                <div className="ranger-badge">
                    {ranger.isAvailable ? (
                        <span className="badge available">Disponible</span>
                    ) : (
                        <span className="badge unavailable">No Disponible</span>
                    )}
                </div>
            </div>
        </div>
    );
};

export default RangerCard;